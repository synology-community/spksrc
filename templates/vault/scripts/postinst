#!/bin/sh
set -e

export VAULT_SHARE_DIR="/var/packages/$SYNOPKG_PKGNAME/shares/vault"
mkdir -p "${VAULT_SHARE_DIR}/var/log/vault"
LOG_FILE="${VAULT_SHARE_DIR}/var/log/vault/install.log"

echo "$(date --iso-8601=second) Starting postinst with: VAULT_SHARE_DIR=${VAULT_SHARE_DIR}" >"${LOG_FILE}"

VAULT_WEB_UI_URL_CONFIG_FILE="/var/packages/$SYNOPKG_PKGNAME/etc/vault_web_ui_url_config"
if [ ! -z "$pkgwizard_vault_web_ui_url" ]; then
    # new install
    VAULT_WEB_UI_URL="$pkgwizard_vault_web_ui_url"
elif [ -f "$VAULT_WEB_UI_URL_CONFIG_FILE" ]; then
    # upgrade
    VAULT_WEB_UI_URL=$(grep -v '^#' "$VAULT_WEB_UI_URL_CONFIG_FILE" | grep -e "VAULT_WEB_UI_URL" | sed -e 's/.*=//')
fi

echo "VAULT_WEB_UI_URL=$VAULT_WEB_UI_URL" > "$VAULT_WEB_UI_URL_CONFIG_FILE"

if [ -f "$SYNOPKG_PKGDEST/ui/config" ]; then
    echo "$(date --iso-8601=second) Updating variables in $SYNOPKG_PKGDEST/ui/config to ${VAULT_WEB_UI_URL}" >>"${LOG_FILE}"
    VAULT_WEB_UI_URL=${VAULT_WEB_UI_URL////\\/}
    sed -i "s/@VAULT_WEB_UI_URL@/$VAULT_WEB_UI_URL/g" "$SYNOPKG_PKGDEST/ui/config"
fi

if [ "$SYNOPKG_PKG_STATUS" = "INSTALL" ]; then
  echo "$(date --iso-8601=second) Installing Vault" >>"${LOG_FILE}"

  echo "$(date --iso-8601=second) Creating ${VAULT_SHARE_DIR}/var/lib/vault" >>"${LOG_FILE}"
  mkdir -p "${VAULT_SHARE_DIR}/var/lib/vault"

  echo "$(date --iso-8601=second) Creating ${VAULT_SHARE_DIR}/etc/vault.d" >>"${LOG_FILE}"
  mkdir -p "${VAULT_SHARE_DIR}/etc/vault.d"

  VAULT_CONFIG_FILE="${VAULT_SHARE_DIR}/etc/vault.d/vault.hcl"
  rm -rf "${VAULT_CONFIG_FILE}"

  SYNOLOGY_IP=$(ip route get "$(ip route show 0.0.0.0/0 | grep -oP 'via \K\S+')" | grep -oP 'src \K\S+')

  if [ ! -f "${VAULT_CONFIG_FILE}" ]; then
    cat <<EOF > "${VAULT_CONFIG_FILE}"
listener "tcp" {
  address          = "0.0.0.0:8200"
  cluster_address  = "${SYNOLOGY_IP}:8201"
  tls_disable      = "true"
}

storage "file" {
  path = "${VAULT_SHARE_DIR}/var/lib/vault"
}

service_registration "consul" {}

api_addr = "http://${SYNOLOGY_IP}:8200"
cluster_addr = "https://${SYNOLOGY_IP}:8201"
ui = true
EOF
    echo "$(date --iso-8601=second) Completed creation of ${VAULT_SHARE_DIR}/etc/vault.d" >>"${LOG_FILE}"
  else
    echo "$(date --iso-8601=second) Skip creating ${VAULT_CONFIG_FILE} due to existing file." >>"${LOG_FILE}"
  fi;
fi;

echo "$(date --iso-8601=second) Installation complete" >>"${LOG_FILE}"

exit 0
